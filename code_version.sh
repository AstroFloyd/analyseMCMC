#!/bin/sh

##  code_version.sh:
##  Write the revision number of the code and the compiler name to a Fortran source file
##  MvdS, 24/07/2010


if [[ ${#} -ne 3 && ${#} -ne 4 ]]; then
    
    echo -e "\n  syntax:   code_version.sh  <CMake base dir>  <Fortran compiler name>  <Compiler flags>  [<PLPLOT>]\n"

else
    
    F90FILE=${1}                        # Fortran-90 output file
    COMPILER=${2}                       # Compiler name
    COMPILER_FLAGS=${3}                 # Compiler flags
    
    PLPLOT='no'
    if [[ ${#} -eq 4 ]]; then
	PLPLOT=${4}                     # PLPLOT (true if "yes")
    fi
    
    
    echo "Generating ${F90FILE}"
    
    echo "!> \file code_version.f90  Source file automatically generated by Makefile to report the code version used." > ${F90FILE}
    echo "" >> ${F90FILE}
    echo "!***********************************************************************************************************************************" >> ${F90FILE}
    echo "!> \brief  Subroutine automatically generated by Makefile to report the code version used." >> ${F90FILE}
    echo "" >> ${F90FILE}
    echo "subroutine print_code_version(unit, use_PLplot)" >> ${F90FILE}
    echo "  implicit none" >> ${F90FILE}
    echo "  integer, intent(in) :: unit" >> ${F90FILE}
    echo "  logical, intent(out) :: use_PLplot" >> ${F90FILE}
    if [ -e .bzr/ ]; then
	echo "  character :: code_revision*(99) = '"`bzr revno`"'" >> ${F90FILE}
    else
	echo "  character :: code_revision*(99) = '"`svnversion`"'" >> ${F90FILE}
    fi
    echo "  character :: compile_date*(99) = '"`date`"'" >> ${F90FILE}
    echo "  character :: compiler*(99) = '"${COMPILER}"'" >> ${F90FILE}
    echo "  character :: compiler_flags*(99) = '"${COMPILER_FLAGS}"'" >> ${F90FILE}
    if [ ${PLPLOT} == 'yes' ]; then
	echo "  character :: PGPLplot*(99) = 'PLplot'" >> ${F90FILE}
	echo "" >> ${F90FILE}
	echo "  use_PLplot = .true." >> ${F90FILE}
    else
	echo "  character :: PGPLplot*(99) = 'PGPlot'" >> ${F90FILE}
	echo "" >> ${F90FILE}
	echo "  use_PLplot = .false." >> ${F90FILE}
    fi
    echo "  write(unit,'(A)')'code revision: '//trim(code_revision)//', compiled on '//trim(compile_date)//' with '// &" >> ${F90FILE}
    echo "       trim(compiler)//' '//trim(compiler_flags)//', using '//trim(PGPLplot)//'.'" >> ${F90FILE}
    echo "" >> ${F90FILE}
    echo "end subroutine print_code_version" >> ${F90FILE}
    echo "!***********************************************************************************************************************************" >> ${F90FILE}
    
    touch -d "1 Jan 2001" ${F90FILE}            # Make the file look old
    
fi


